cheateb_dressed_interaction = {
	category = cheateb_interaction_menu
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		scope:recipient = {
			if = {
				limit = { has_character_flag = is_naked }
				remove_character_flag = is_naked
			}
			else = {
				add_character_flag = { flag = is_naked }
			}
		}
	}
}

cheateb_claim_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		cheateb_targetchar_effect = yes
		scope:recipient = {
			every_held_title = {
				scope:cheateb_targetscope = {
					make_claim_strong = prev
				}
			}
		}
	}
}

cheateb_take_alltitle_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = conquest
		}
		cheateb_targetchar_effect = yes
		scope:recipient = {
				every_held_title = {
					change_title_holder = {
						holder = scope:cheateb_targetscope
						change = scope:change
					}
				}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

cheateb_take_title_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	on_accept = { 
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = conquest
		}

		cheateb_targetchar_effect = yes
		
		scope:recipient.primary_title = {
			change_title_holder = {
				holder = scope:cheateb_targetscope
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

cheateb_take_title_stand_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	on_accept = { 
		create_title_and_vassal_change = change
		scope:change = { set_title_and_vassal_change_type = conquest }
		cheateb_targetchar_effect = yes
		scope:recipient.location.county = {
			change_title_holder = {
				holder = scope:cheateb_targetscope
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
}

cheateb_religion_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		cheateb_targetchar_effect = yes
		scope:recipient = {
			set_character_faith = scope:cheateb_targetscope.faith
		}
	}
}

cheateb_culture_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		cheateb_targetchar_effect = yes
		scope:recipient = {
			set_culture = scope:cheateb_targetscope.culture
		}
	}
}

cheateb_kill_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		scope:recipient = {
			death = { death_reason = death_mysterious }
		}
	}
}

cheateb_imprison_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0
	
	on_accept = {
		cheateb_targetchar_effect = yes
		scope:cheateb_targetscope = {
			if = {
				limit = { is_imprisoned = yes }
				release_from_prison = yes
			}
			else = {
				imprison = {
					target = scope:recipient
					type = dungeon
				}
			}
		}
	}
}

cheateb_marry_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	on_accept = {
		cheateb_targetchar_effect = yes
		if = {
			limit = { scope:recipient = { is_married = yes } }
			scope:recipient = {
				every_spouse = { divorce = scope:recipient }
			}
		}
		if = {
			limit = { scope:cheateb_targetscope = { is_married = yes } }
			scope:cheateb_targetscope = {
				every_spouse = { divorce = scope:cheateb_targetscope	}
			}
		}
		else = {
			scope:cheateb_targetscope = {
				marry = scope:recipient
			}
		}
	}
}

cheateb_setsoulmate_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	on_accept = {
		cheateb_targetchar_effect = yes
		scope:cheateb_targetscope = {
			if = {
				limit = { has_relation_soulmate = scope:recipient }
				remove_relation_soulmate = scope:recipient
			}
			else = {
				set_relation_soulmate = scope:recipient
			}
		}
	}
}

cheateb_setlover_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	on_accept = {
		cheateb_targetchar_effect = yes
		scope:cheateb_targetscope = {
			if = {
				limit = { has_relation_lover = scope:recipient }
				remove_relation_lover = scope:recipient
			}
			else = {
				set_relation_lover = scope:recipient
			}
		}
	}
}

cheateb_pregnant_interaction = {
	category = cheateb_interaction_menu_relation
	use_diplomatic_range = no
	auto_accept = yes
	ai_will_do = 0

	is_shown = {
		scope:recipient = {	is_female = yes }
	}

	on_accept = {
		cheateb_targetchar_effect = yes
		scope:recipient = {
			if = {
				limit = { is_pregnant = yes }
				end_pregnancy = yes
			}
			else = {
				make_pregnant = { father = scope:cheateb_targetscope }
			}
		}
	}
}
